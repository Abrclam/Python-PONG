#Abraham Gilmore, finished 10/4, python PONG
#import the pygame library and initialize it

import pygame
pygame.init()


screen = pygame.display.set_mode((700,500))
pygame.display.set_caption("Ping")

#variable that runs game loop
doExit = False
#these go above game loop
p1Score = 0
p2Score = 0
p1x = 20
p1y = 200
p2x = 660
p2y = 200
#ball variables
bx = 350 #xposition
by = 250 #yposition
bVx = 5 #x velocity
bVy = 5 #y velocity



#reflect ball off side walls
if bx < 0 or bx + 20 >700:
        bVx *= -1
# The clock will be used to control the game speed
clock = pygame.time.Clock()



while not doExit: #Game loop
    
    clock.tick(60) #FPS
   
   
    if bx > 679:
        bVx *= -1
        p1Score += 1
        
    if bx < 1:
        bVx *= -1
        p2Score += 1
        

    for event in pygame.event.get(): #check if user did something
        if event.type == pygame.QUIT: #check if user clicked close
            doExit = True #flag that we're done so we exit game loop
            
    #game logic here
    keys = pygame.key.get_pressed()
    if keys[pygame.K_w]:
        p1y-=5
    if keys[pygame.K_s]:
        p1y+=5
    if keys[pygame.K_i]:
        p2y-=5
    if keys[pygame.K_k]:
        p2y+=5
            
    #ball movement
    bx += bVx
    by += bVy
    
    #reflect ball off wall
    if bx < 0 or bx + 20 > 700:
        bVx *=-1
    if by < 0 or by + 20 > 500:
        bVy *=-1
    
    #ball-paddle reflection
    if bx < p1x +20 and by + 20 > p1y and by < p1y + 100:
        bVx *= -1
    if bx > p2x -20 and by + 20 > p2y and by < p2y + 100:
        bVx *= -1
        
   
    
    #render section here
      
      
    
        
        
    screen.fill((0,0,255)) #wipe screen black
    #draw a rectangle
    pygame.draw.rect(screen, (255, 255, 255), (p1x, p1y, 20, 100), 1)
    
    pygame.draw.rect(screen, (255, 255, 255), (p2x, p2y, 20, 100), 1)
   
    pygame.draw.rect(screen, (0, 0, 0), (bx, by, 20, 20), 1)
    
    pygame.draw.line (screen, (255, 0, 130), [349, 0], [349, 500], 9)
    
    #display score
    font = pygame.font.Font('freesansbold.ttf', 74) #default font
    text = font.render(str(p1Score), 1, (255, 255, 255))
    screen.blit(text, (250,10))
    text = font.render(str(p2Score), 1, (255, 255, 255))
    screen.blit(text, (420,10))
    
    #update the screen
    pygame.display.flip()
    
    



pygame.quit()#when game is done close pygame
#variables to hold passle position


